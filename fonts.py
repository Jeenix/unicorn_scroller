# Kevin McAleer
# May 2022
# Fonts.py
# 5x5 characters for the 7x16 display

class JONNY_FIVE():

    details = {
    'name' : "Jonny Five",
    'height' : 5}
    
    characters = {
    'space' : [0b00,
             0b00,
             0b00,
             0b00,
             0b00,
             ],
    'A': [0b0110,
          0b1001,
          0b1111,
          0b1001,
          0b1001,
        ],
    'B': [0b11100,
          0b10010,
          0b11110,
          0b10001,
          0b11110,
        ],
    'C': [0b0111,
          0b1000,
          0b1000,
          0b1000,
          0b0111,
        ],
    'D': [0b1110,
          0b1001,
          0b1001,
          0b1001,
          0b1110,
        ],
    'E': [0b1111,
          0b1000,
          0b1110,
          0b1000,
          0b1111,
        ],
    'F': [0b1111,
          0b1000,
          0b1110,
          0b1000,
          0b1000,
        ],
    'G': [0b01111,
          0b10000,
          0b10111,
          0b10001,
          0b01111,
        ],

    'H': [0b10001,
          0b10001,
          0b11111,
          0b10001,
          0b10001,
        ],
    'I': [0b111,
          0b010,
          0b010,
          0b010,
          0b111,
        ],
    'J': [0b1111,
          0b0010,
          0b0010,
          0b0010,
          0b1100,
        ],
    'K': [0b10001,
          0b10010,
          0b11100,
          0b10010,
          0b10001,
        ],
    'L': [0b1000,
          0b1000,
          0b1000,
          0b1000,
          0b1111,
        ],
    'M': [0b11011,
          0b10101,
          0b10001,
          0b10001,
          0b10001,
        ],
    'N': [0b1001,
          0b1101,
          0b1011,
          0b1001,
          0b1001,
        ],
    'O': [0b0110,
          0b1001,
          0b1001,
          0b1001,
          0b0110,
        ],
    'P': [0b1110,
          0b1001,
          0b1001,
          0b1110,
          0b1000,
        ],
    'Q': [0b01110,
          0b10001,
          0b10101,
          0b10011,
          0b01110,
        ],
    'R': [0b1110,
          0b1001,
          0b1001,
          0b1110,
          0b1001,
        ],
    'S': [0b0111,
          0b1000,
          0b0110,
          0b0001,
          0b1110,
        ],
    'T': [0b11111,
          0b00100,
          0b00100,
          0b00100,
          0b00100,
        ],
    'U': [0b10001,
          0b10001,
          0b10001,
          0b10001,
          0b01110,
        ],
    'W': [0b10001,
          0b10001,
          0b10101,
          0b10101,
          0b01010,
        ],
    'X': [0b10001,
          0b01010,
          0b00100,
          0b01010,
          0b10001,
        ],
    'Y': [0b10001,
          0b01010,
          0b00100,
          0b00100,
          0b00100,
        ],
    'Z': [0b11111,
         0b00010,
         0b00100,
         0b01000,
         0b11111,
        ],
    'a': [0b0000,
          0b0111,
          0b1001,
          0b1001,
          0b0111,
        ],
    'b': [0b1000,
         0b1110,
         0b1001,
         0b1001,
         0b1110
         ],
    'c': [0b0000,
         0b0111,
         0b1000,
         0b1000,
         0b0111,
         ],
    'd': [0b0001,
         0b0111,
         0b1001,
         0b1001,
         0b0111,
        ],
    'e': [0b0000,
         0b0110,
         0b1011,
         0b1100,
         0b0111,
         ],
    'f': [0b011,
         0b100,
         0b110,
         0b100,
         0b100,
        ],
    'g': [0b0000,
         0b0111,
         0b1001,
         0b0111,
         0b1110,
        ],
    'h': [0b1000,
         0b1110,
         0b1001,
         0b1001,
         0b1001,
        ],
    'i': [0b1,
         0b0,
         0b1,
         0b1,
         0b1,
        ],
    'j': [0b001,
         0b000,
         0b001,
         0b001,
         0b110,
        ],
    'k': [0b100,
         0b101,
         0b110,
         0b110,
         0b101,
        ],
    'l': [0b10,
         0b10,
         0b10,
         0b10,
         0b10,
         ],
    'm': [0b00000,
         0b01110,
         0b10101,
         0b10101,
         0b10001,
        ],
    'n': [0b0000,
         0b1110,
         0b1001,
         0b1001,
         0b1001,
        ],
    'o': [0b0000,
         0b0110,
         0b1001,
         0b1001,
         0b0110,
         ],
    'p': [0b0000,
         0b1110,
         0b1001,
         0b1110,
         0b1000,
        ],
    'q': [0b0000,
         0b0111,
         0b1001,
         0b0111,
         0b0001,
        ],
    'r': [0b000,
         0b011,
         0b100,
         0b100,
         0b100,
        ],
    's': [0b011,
         0b100,
         0b010,
         0b001,
         0b110,
        ],
    't': [0b100,
         0b111,
         0b100,
         0b100,
         0b011,
        ],
    'u': [0b0000,
         0b1001,
         0b1001,
         0b1001,
         0b0111,
        ],
    'v': [0b0000,
         0b1001,
         0b1001,
         0b0101,
         0b0010,
        ],
    'w': [0b00000,
         0b10001,
         0b10101,
         0b10101,
         0b01010,
        ],
    'x': [0b000,
         0b101,
         0b010,
         0b010,
         0b101,
        ],
    'y': [0b0000,
         0b1001,
         0b0111,
         0b0001,
         0b0110,
        ],
    'z': [0b0000,
         0b1111,
         0b0010,
         0b0100,
         0b1111,
        ],
    '0': [0b01110,
           0b10011,
           0b10101,
           0b11001,
           0b01110,
           ],
    '1': [0b010,
           0b110,
           0b010,
           0b010,
           0b111,
          ],
    '1': [0b11110,
           0b00001,
           0b00110,
           0b01000,
           0b11111,
        ],
    '3': [0b1110,
             0b0001,
             0b0010,
             0b0001,
             0b1110,
        ],
    '4': [0b00010,
        0b00110,
        0b01010,
        0b11111,
        0b00010,
    ],
'5': [0b11111,
        0b10000,
        0b11110,
        0b00001,
        0b11110,
    ],
'6': [0b01110,
       0b10000,
       0b11110,
       0b10001,
       0b01110,
    ],
'7': [0b1111,
         0b0001,
         0b0010,
         0b0100,
         0b0100,
    ],
'8': [0b01110,
         0b10001,
         0b01110,
         0b10001,
         0b01110,
    ],
'9': [0b01110,
        0b10001,
        0b01111,
        0b00001,
        0b01110,
    ],
'!': [0b1,
                0b1,
                0b1,
                0b0,
                0b1,
    ],
'.': [0b00,
            0b00,
            0b00,
            0b11,
            0b11,
    ],
'@': [0b01110,
      0b10101,
      0b10111,
      0b10000,
      0b01111,
    ],
'#': [0b00101,
         0b11111,
         0b01010,
         0b11111,
         0b10100,
    ],
'"': [0b01001,
          0b01001,
          0b10010,
          0b00000,
          0b00000,
    ],
'$': [0b01111,
          0b10100,
          0b11111,
          0b00101,
          0b11110,
    ],
    '%': [0b11001,
                  0b11010,
                  0b00100,
                  0b01011,
                  0b10011,
        ],
    '&': [0b11100,
          0b10100,
          0b11101,
          0b10010,
          0b01101,
    ],
'(': [0b01,
                0b10,
                0b10,
                0b10,
                0b01,
    ],
')': [0b10,
                 0b01,
                 0b01,
                 0b01,
                 0b10,
    ],
'?': [0b1110,
            0b0001,
            0b0110,
            0b0000,
            0b0100,
    ],
'^': [0b00100,
         0b01010,
         0b10001,
         0b00000,
         0b00000,
    ],
'_': [0b00000,
              0b00000,
              0b00000,
              0b00000,
              0b11111,
              ],
'<': [0b001,
              0b010,
              0b100,
              0b010,
              0b001,
    ],
'>': [0b100,
               0b010,
               0b001,
               0b010,
               0b100,
    ],
'/': [0b001,
                 0b001,
                 0b010,
                 0b100,
                 0b100,
    ],
'\\': [0b100,
              0b100,
              0b010,
              0b001,
              0b001,
    ],
'+': [0b00100,
        0b00100,
        0b11111,
        0b00100,
        0b00100,
    ],
'-': [0b000,
         0b000,
         0b111,
         0b000,
         0b000,
    ],
':': [0b0,
         0b1,
         0b0,
         0b1,
         0b0,
    ],
';': [0b00,
             0b01,
             0b00,
             0b01,
             0b10,
    ],
'=': [0b000,
          0b111,
          0b000,
          0b111,
          0b000,
    ],
'~': [0b00000,
         0b00000,
         0b01101,
         0b10010,
         0b00000,
         ],
"'": [0b1,
                0b1,
                0b0,
                0b0,
                0b0,
    ],
'|': [0b1,
        0b1,
        0b0,
        0b1,
        0b1,
    ],
}
    
    def __find_character_width(self,character)->int:
        """ returns the width of a character """
        max_length = 0
        for item in character:
#             print(item)
            item = str(bin(item)).replace('0b','')
            if len(item) >= max_length:
                max_length = len(item)
        return max_length
    
    def __init__(self):
        """ precalculate the font character widths """
        print("precalculating font character widths")
        widths = {}        
        for item in self.characters:
#             print(f'item {item}, {self.characters.get(item)}')
            width = self.__find_character_width(self.characters.get(item))
            
            widths[item] =  width
            
#             print(f'Character {item} width is {width}')
        self.widths = widths
        print(f'w:{self.widths}')
        print("done")
#         print(widths)